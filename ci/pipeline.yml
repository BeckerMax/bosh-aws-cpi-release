---
groups:
  - name: bosh-aws-cpi-release
    jobs:
      - build-candidate
      - terraform-ubuntu
      - deploy-ubuntu
      - bats-ubuntu
      - terraform-centos
      - deploy-centos
      - bats-centos
      - lifecycle
      - promote-candidate

  - name: ubuntu
    jobs:
      - build-candidate
      - terraform-ubuntu
      - deploy-ubuntu
      - bats-ubuntu
      - promote-candidate

  - name: centos
    jobs:
      - build-candidate
      - terraform-centos
      - deploy-centos
      - bats-centos
      - promote-candidate

jobs:
- name: build-candidate
  serial: true
  plan:
  - aggregate:
    - {trigger: false, get: bosh-cpi-release, resource: bosh-cpi-release-in}
    - {trigger: false, get: version-semver, params: {bump: patch}}

  - put: version-semver
    params: {file: version-semver/number}

  - task: build
    file: bosh-cpi-release/ci/tasks/build-candidate.yml

  - put: bosh-cpi-dev-artifacts
    params: {from: build/out/.*\.tgz}

- name: lifecycle
  serial: true
  plan:
  - aggregate:
    - {trigger: true,  passed: [build-candidate], get: bosh-cpi-dev-artifacts}
    - {trigger: false,                            get: bosh-src}
    - {trigger: false,                            get: bosh-cpi-release, resource: bosh-cpi-release-in}

  - task: test
    file: bosh-cpi-release/ci/tasks/run-lifecycle.yml
    config:
      params:
        BOSH_AWS_ACCESS_KEY_ID:       {{lifecycle_BOSH_AWS_ACCESS_KEY_ID}}
        BOSH_AWS_SECRET_ACCESS_KEY:   {{lifecycle_BOSH_AWS_SECRET_ACCESS_KEY}}
        BOSH_AWS_SUBNET_ID:           {{lifecycle_BOSH_AWS_SUBNET_ID}}
        BOSH_AWS_SUBNET_ZONE:         {{lifecycle_BOSH_AWS_SUBNET_ZONE}}
        BOSH_AWS_LIFECYCLE_MANUAL_IP: {{lifecycle_BOSH_AWS_LIFECYCLE_MANUAL_IP}}
        BOSH_AWS_DEFAULT_KEY_NAME:    {{lifecycle_BOSH_AWS_DEFAULT_KEY_NAME}}

- name: terraform-ubuntu
  serial_groups: [ubuntu]
  plan:
  - aggregate:
    - {trigger: false, get: bosh-concourse-ci}
    - {trigger: false, get: bosh-cpi-release, resource: bosh-cpi-release-in}
    - {trigger: false, get: terraform-state-version, params: {bump: patch}, resource: terraform-ubuntu-state-version}

  - task: terraform
    file: bosh-cpi-release/ci/tasks/terraform.yml
    config:
      params:
        aws_access_key_id:     {{s3_aws_cpi_access_key}}
        aws_secret_access_key: {{s3_aws_cpi_secret_key}}
        concourse_ip:          {{concourse_ip}}
        base_os:               ubuntu

  - put: terraform-ubuntu-state-version
    params: {file: terraform-state-version/number}
  - put: terraform-state
    params: {from: terraform/ubuntu-bats-.*\.tfstate$}
  - put: terraform-ubuntu-exports
    params: {from: terraform/terraform-ubuntu-exports-.*\.sh$}

- name: deploy-ubuntu
  serial_groups: [ubuntu]
  plan:
  - aggregate:
    - {trigger: true,  passed: [build-candidate],  get: bosh-cpi-dev-artifacts}
    - {trigger: false, passed: [build-candidate],  get: version-semver}
    - {trigger: false, passed: [build-candidate],  get: bosh-cpi-release, resource: bosh-cpi-release-in}
    - {trigger: false, passed: [terraform-ubuntu], get: terraform-ubuntu-state-version}
    - {trigger: false, passed: [terraform-ubuntu], get: terraform-ubuntu-exports}
    - {trigger: false,                             get: bosh-concourse-ci}
    - {trigger: false,                             get: bosh-init}
    - {trigger: false,                             get: bosh-release}
    - {trigger: false,                             get: stemcell, resource: aws-ubuntu-stemcell}

  - task: deploy
    file: bosh-cpi-release/ci/tasks/deploy.yml
    config:
      params:
        base_os:               ubuntu
        aws_access_key_id:     {{s3_aws_cpi_access_key}}
        aws_secret_access_key: {{s3_aws_cpi_secret_key}}

  - conditions: [success, failure]
    task: save-deployment
    file: bosh-cpi-release/ci/tasks/save-deployment.yml
    config:
      params:
        base_os: ubuntu

  - put: bosh-concourse-ci
    params:
      repository: save-deployment/deploy/bosh-concourse-ci
      rebase: true

- name: bats-ubuntu
  serial_groups: [ubuntu]
  plan:
  - aggregate:
    - {trigger: true,  passed: [deploy-ubuntu],    get: bosh-cpi-dev-artifacts}
    - {trigger: false, passed: [deploy-ubuntu],    get: stemcell, resource: aws-ubuntu-stemcell}
    - {trigger: false, passed: [deploy-ubuntu],    get: bosh-cpi-release, resource: bosh-cpi-release-in}
    - {trigger: false, passed: [terraform-ubuntu], get: terraform-state-version, resource: terraform-ubuntu-state-version}
    - {trigger: false, passed: [terraform-ubuntu], get: terraform-ubuntu-exports}
    - {trigger: false,                             get: bosh-concourse-ci}
    - {trigger: false,                             get: bats}

  - task: test
    file: bosh-cpi-release/ci/tasks/run-bats.yml
    config:
      params:
        BAT_VCAP_PASSWORD:    {{BAT_VCAP_PASSWORD}}
        BAT_STEMCELL:         {{BAT_STEMCELL}}
        BAT_DEPLOYMENT_SPEC:  {{ubuntu_BAT_DEPLOYMENT_SPEC}}
        BAT_VCAP_PRIVATE_KEY: {{BAT_VCAP_PRIVATE_KEY}}
        base_os:              ubuntu

- name: terraform-centos
  serial_groups: [centos]
  plan:
  - aggregate:
    - {trigger: false, get: bosh-concourse-ci}
    - {trigger: false, get: bosh-cpi-release, resource: bosh-cpi-release-in}
    - {trigger: false, get: terraform-state-version, params: {bump: patch}, resource: terraform-centos-state-version}

  - task: terraform
    file: bosh-cpi-release/ci/tasks/terraform.yml
    config:
      params:
        aws_access_key_id:     {{s3_aws_cpi_access_key}}
        aws_secret_access_key: {{s3_aws_cpi_secret_key}}
        concourse_ip:          {{concourse_ip}}
        base_os:               centos

  - put: terraform-centos-state-version
    params: {file: terraform-state-version/number}
  - put: terraform-centos-state
    params: {from: terraform/centos-bats-.*\.tfstate$}
  - put: terraform-centos-exports
    params: {from: terraform/terraform-centos-exports-.*\.sh$}

- name: deploy-centos
  serial_groups: [centos] # shouldn't deploy while bats run
  plan:
  - aggregate:
    - {trigger: true,  passed: [build-candidate],  get: bosh-cpi-dev-artifacts}
    - {trigger: false, passed: [build-candidate],  get: version-semver}
    - {trigger: false, passed: [build-candidate],  get: bosh-cpi-release, resource: bosh-cpi-release-in}
    - {trigger: false, passed: [terraform-centos], get: terraform-centos-state-version}
    - {trigger: false, passed: [terraform-centos], get: terraform-centos-exports}
    - {trigger: false,                             get: bosh-concourse-ci }
    - {trigger: false,                             get: bosh-init}
    - {trigger: false,                             get: bosh-release}
    - {trigger: false,                             get: stemcell, resource: aws-centos-stemcell}

  - task: deploy
    file: bosh-cpi-release/ci/tasks/deploy.yml
    config:
      params:
        base_os:               centos
        aws_access_key_id:     {{s3_aws_cpi_access_key}}
        aws_secret_access_key: {{s3_aws_cpi_secret_key}}

  - conditions: [success, failure]
    task: save-deployment
    file: bosh-cpi-release/ci/tasks/save-deployment.yml
    config:
      params:
        base_os: centos

  - put: bosh-concourse-ci
    params:
      repository: save-deployment/deploy/bosh-concourse-ci
      rebase: true

- name: bats-centos
  serial_groups: [centos] # can't run while deploying
  plan:
  - aggregate:
    - {trigger: true,  passed: [deploy-centos],    get: bosh-cpi-dev-artifacts}
    - {trigger: false, passed: [deploy-centos],    get: stemcell, resource: aws-centos-stemcell}
    - {trigger: false, passed: [deploy-centos],    get: bosh-cpi-release, resource: bosh-cpi-release-in}
    - {trigger: false, passed: [terraform-centos], get: terraform-state-version, resource: terraform-centos-state-version}
    - {trigger: false, passed: [terraform-centos], get: terraform-centos-exports}
    - {trigger: false,                             get: bosh-concourse-ci}
    - {trigger: false,                             get: bats}

  - task: test
    file: bosh-cpi-release/ci/tasks/bosh-aws-cpi/run-bats.yml
    config:
      params:
        BAT_VCAP_PASSWORD:    {{BAT_VCAP_PASSWORD}}
        BAT_STEMCELL:         {{BAT_STEMCELL}}
        BAT_DEPLOYMENT_SPEC:  {{centos_BAT_DEPLOYMENT_SPEC}}
        BAT_VCAP_PRIVATE_KEY: {{BAT_VCAP_PRIVATE_KEY}}
        base_os:              centos

- name: promote-candidate
  plan:
  - aggregate:
    - {trigger: true,  passed: [lifecycle, bats-ubuntu, bats-centos], get: bosh-cpi-dev-artifacts}
    - {trigger: false, get: bosh-cpi-release, resource: bosh-cpi-release-out}
    - {trigger: false, get: bosh-concourse-ci}

  - task: promote
    file: bosh-cpi-release/ci/tasks/promote-candidate.yml
    config:
      params:
        aws_access_key_id: {{s3_aws_cpi_access_key}}
        aws_secret_access_key: {{s3_aws_cpi_secret_key}}

  - put: bosh-cpi-release
    resource: bosh-cpi-release-out
    params: {repository: promote/bosh-cpi-release, rebase: true}

resources:
- name: bosh-cpi-dev-artifacts
  type: s3
  source:
    regexp: bosh-aws-cpi\.tgz
    bucket: {{s3_aws_cpi_pipeline_bucket}}
    region_name: {{s3_aws_cpi_region}}
    access_key_id: {{s3_aws_cpi_access_key}}
    secret_access_key: {{s3_aws_cpi_secret_key}}

- name: bosh-concourse-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-concourse-ci.git
    branch: master
    private_key: {{github_deployment_key__bosh-concourse-ci}}

- name: bosh-cpi-release-in
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bosh-aws-cpi-release.git
    branch: master
    private_key: {{github_deployment_key__bosh-aws-cpi-release}}
    ignore_paths:
      - .final_builds/**/*.yml
      - releases/**/*.yml

- name: bosh-cpi-release-out
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bosh-aws-cpi-release.git
    branch: master
    private_key: {{github_deployment_key__bosh-aws-cpi-release}}

- name: version-semver
  type: semver
  source:
    key:               current-version # dev-release version
    bucket:            {{s3_aws_cpi_pipeline_bucket}}
    access_key_id:     {{s3_aws_cpi_access_key}}
    secret_access_key: {{s3_aws_cpi_secret_key}}

- name: bosh-init
  type: s3
  source:
    regexp: bosh-init-([0-9.]+)-linux-amd64
    bucket: {{s3_bosh_init_bucket}}
    region_name: {{s3_aws_cpi_region}}

- name: bosh-src
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh.git
    branch: master

- name: bats
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
    branch: concourse

- name: deployments-bosh
  type: git
  source:
    uri: git@github.com:cloudfoundry/deployments-bosh.git
    branch: master
    private_key: {{github_deployment_key__deployments-bosh}}

- name: bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh

- name: aws-ubuntu-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: aws-centos-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-centos-7-go_agent

- name: terraform-state
  type: s3
  source:
    regexp: ubuntu-bats-.*\.tfstate
    bucket: {{s3_aws_cpi_pipeline_bucket}}
    region_name: {{s3_aws_cpi_region}}
    access_key_id: {{s3_aws_cpi_access_key}}
    secret_access_key: {{s3_aws_cpi_secret_key}}

- name: terraform-centos-state
  type: s3
  source:
    regexp: centos-bats-.*\.tfstate
    bucket: {{s3_aws_cpi_pipeline_bucket}}
    region_name: {{s3_aws_cpi_region}}
    access_key_id: {{s3_aws_cpi_access_key}}
    secret_access_key: {{s3_aws_cpi_secret_key}}

- name: terraform-ubuntu-exports
  type: s3
  source:
    regexp: terraform-ubuntu-exports-.*\.sh
    bucket: {{s3_aws_cpi_pipeline_bucket}}
    region_name: {{s3_aws_cpi_region}}
    access_key_id: {{s3_aws_cpi_access_key}}
    secret_access_key: {{s3_aws_cpi_secret_key}}

- name: terraform-centos-exports
  type: s3
  source:
    regexp: terraform-centos-exports-.*\.sh
    bucket: {{s3_aws_cpi_pipeline_bucket}}
    region_name: {{s3_aws_cpi_region}}
    access_key_id: {{s3_aws_cpi_access_key}}
    secret_access_key: {{s3_aws_cpi_secret_key}}

- name: terraform-ubuntu-state-version
  type: semver
  source:
    key: terraform-state-version
    bucket: {{s3_aws_cpi_pipeline_bucket}}
    access_key_id: {{s3_aws_cpi_access_key}}
    secret_access_key: {{s3_aws_cpi_secret_key}}

- name: terraform-centos-state-version
  type: semver
  source:
    key: terraform-centos-state-version
    bucket: {{s3_aws_cpi_pipeline_bucket}}
    access_key_id: {{s3_aws_cpi_access_key}}
    secret_access_key: {{s3_aws_cpi_secret_key}}
